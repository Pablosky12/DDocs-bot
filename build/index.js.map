{"version":3,"sources":["../src/index.js"],"names":["bot","discord","Client","login","process","env","BOT_TOKEN","qnaparser","RegExp","client","axios","create","baseURL","API_URL","Command","AddQuestion","AddAnswer","Register","commands","name","handler","addQuestion","condition","msg","content","startsWith","message","addAnswer","registerBot","shouldHandle","author","channel","guild","on","commandKey","command","console","log","react","e","error","channelID","channels","cache","c","channelType","type","get","systemChannelID","send","parentID","server","id","discordMsgId","text","match","post","tech","qtext","replace","data","question","answerData","qtech","questionId","qid"],"mappings":"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","sourcesContent":["import \"dotenv/config\";\n\nimport discord from \"discord.js\";\nimport axios from \"axios\";\n\nconst bot = new discord.Client();\nbot.login(process.env.BOT_TOKEN);\n\nconst qnaparser = new RegExp(/[qQaA]:(.*)/);\n\nconst client = axios.create({\n  baseURL: process.env.API_URL,\n});\n\nconst Command = {\n  AddQuestion: 1,\n  AddAnswer: 2,\n  Register: 3,\n};\n\nconst commands = {\n  [Command.AddQuestion]: {\n    name: Command.AddQuestion,\n    handler: addQuestion,\n    condition: (msg) => msg.content.startsWith(\"q:\"),\n    message: `\n      In order to ask a question, just start your message with 'q:' and ask your question as you normally would. \n      If your question is correctly saved a reaction with ✍️ will appear..\n    `,\n  },\n  [Command.AddAnswer]: {\n    name: Command.AddAnswer,\n    handler: addAnswer,\n    condition: (msg) => msg.content.startsWith(\"> q:\"),\n    message: `In order to add an aswer to a question you must use the quote functionality for discord, \n    If your answer is correctly saved a reaction with ✍️ will appear.`,\n  },\n  [Command.Register]: {\n    name: Command.Register,\n    handler: registerBot,\n    condition: (msg) => msg.content.startsWith(\"dd!\"),\n    message: `To register the bot you must add a BotOwner role on the channel. A user with the BotOwner role \n    has to call 'dd!' to setup the bot. Follow the instructions that appear next, this will allow you to set a\n    technology for the discussions made in this server.\n    `,\n  },\n};\n\nfunction shouldHandle(msg) {\n  return !msg.author.bot || msg.channel.guild;\n}\n\nbot.on(\"message\", async (msg) => {\n  if (!shouldHandle) return;\n\n  for (let commandKey in commands) {\n    const command = commands[commandKey];\n    if (command.condition(msg)) {\n      console.log(`entered condition ${command.name}`);\n      try {\n        command.handler(msg);\n        msg.react(\"✍️\");\n      } catch (e) {\n        console.error(`Something exploded while handling ${command.name}`);\n        console.error(e);\n      }\n      break;\n    }\n  }\n});\n\nbot.on(\"guildCreate\", (guild) => {\n  console.log(\"Joined a new guild: \" + guild.name);\n  console.log(guild);\n\n  let channelID;\n  let channels = [...guild.channels.cache];\n  for (let c of channels) {\n    let channelType = c[1].type;\n    if (channelType === \"text\") {\n      channelID = c[0];\n      break;\n    }\n  }\n  const channel = bot.channels.cache.get(guild.systemChannelID || channelID);\n  channel.send(\"Thanks for inviting me! Set me up by running D!\");\n  //Your other stuff like adding to guildArray\n});\n\nasync function registerBot() {}\nasync function addQuestion(msg) {\n  const { parentID: server } = msg.channel;\n  const { id: author } = msg.author;\n  const { id: discordMsgId } = msg;\n  const text = msg.content.match(qnaparser)[1];\n  await client.post(`question`, {\n    author,\n    text,\n    server,\n    discordMsgId,\n    tech: 1,\n  });\n}\n\nasync function addAnswer(msg) {\n  const { parentID: server } = msg.channel;\n  const { id: author } = msg.author;\n  const text = msg.content.match(/(?<=\\<.*\\>).+/)[0];\n  const qtext = msg.content\n    .match(/(?<= q:)(.*?)(?=<.*)/gs)[0]\n    .replace(/\\n/g, \"\");\n\n  const { data: question } = await client.post(\"question/query\", {\n    text: qtext,\n  });\n\n  const { data: answerData } = await client.post(\"answer\", {\n    author,\n    text,\n    server,\n    tech: question.qtech,\n    questionId: question.qid,\n  });\n}\n"],"file":"index.js"}